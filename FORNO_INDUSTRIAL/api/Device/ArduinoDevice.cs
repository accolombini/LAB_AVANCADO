using System.IO.Ports;using System.Text;using Forno.Api.Device;
public sealed class ArduinoDevice:IDevice,System.IDisposable{private readonly SerialPort _p;private readonly StringBuilder _rx=new();private Telemetry? _last;public ArduinoDevice(string port,int baud=115200){_p=new SerialPort(port,baud){NewLine="\n",ReadTimeout=50,WriteTimeout=50};_p.DataReceived+=OnData;}public Telemetry? LastTelemetry=>_last;public System.Threading.Tasks.Task StartAsync(System.Threading.CancellationToken ct=default){if(!_p.IsOpen)_p.Open();return System.Threading.Tasks.Task.CompletedTask;}public System.Threading.Tasks.Task StopAsync(System.Threading.CancellationToken ct=default){if(_p.IsOpen)_p.Close();return System.Threading.Tasks.Task.CompletedTask;}public async System.Threading.Tasks.Task<string> SendAsync(string c,System.Threading.CancellationToken ct=default){if(!_p.IsOpen)_p.Open();await _p.BaseStream.WriteAsync(Encoding.ASCII.GetBytes(c+"\n"),ct);return "OK";}private void OnData(object? s,SerialDataReceivedEventArgs e){try{_rx.Append(_p.ReadExisting());int idx;while((idx=_rx.ToString().IndexOf('\n'))>=0){var line=_rx.ToString()[..idx].Trim();_rx.Remove(0,idx+1);if(line.Length>0)TryParse(line);}}catch{}}private void TryParse(string line){var parts=line.Split(';',System.StringSplitOptions.RemoveEmptyEntries);double t=0,sp=0,lmin=0,lmax=0,lcrit=0;string mode="",state="",alarm="";int heater=0,fan=0;bool estop=false;long dt=0,loop=0;foreach(var p in parts){var kv=p.Split('=');if(kv.Length!=2)continue;var k=kv[0];var v=kv[1];switch(k){case"T":double.TryParse(v,out t);break;case"SP":double.TryParse(v,out sp);break;case"LIM_MIN":double.TryParse(v,out lmin);break;case"LIM_MAX":double.TryParse(v,out lmax);break;case"LIM_CRIT":double.TryParse(v,out lcrit);break;case"MODE":mode=v;break;case"STATE":state=v;break;case"HEATER":int.TryParse(v,out heater);break;case"FAN":int.TryParse(v,out fan);break;case"ALARM":alarm=v;break;case"ESTOP":estop=v=="1";break;case"DT_ESTOP_US":long.TryParse(v,out dt);break;case"LOOP_US":long.TryParse(v,out loop);break;}}_last=new Telemetry(t,sp,lmin,lmax,lcrit,mode,state,heater,fan,alarm,estop,dt,loop,System.DateTime.UtcNow);}public void Dispose()=>_p.Dispose();}
